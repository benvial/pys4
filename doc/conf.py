



import pys4

extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.autosummary",
    "sphinx.ext.todo",
    "sphinx_gallery.gen_gallery",
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix of source filenames.
source_suffix = ".rst"

# The encoding of source files.
# source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = "index"

# General information about the project.
project = "pys4"
copyright = "2013, Victor Liu"

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = pys4.__version__
# The full version, including alpha/beta/rc tags.
release = pys4.__version__

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
# language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
# today = ''
# Else, today_fmt is used as the format for a strftime call.
# today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = []

# The reST default role (used for this markup: `text`) to use for all
# documents.
# default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
# add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
# add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
# show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# A list of ignored prefixes for module index sorting.
# modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
# keep_warnings = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = "furo"

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
html_theme_options = {
    "light_logo": "pys4.svg",
    "dark_logo": "pys4-white.svg",
    "light_css_variables": {
        "color-brand-primary": "#33916f",
        "color-brand-content": "#33916f",
        "color-background-primary": "white",
        "color-background-secondary": "#eaf0ea",
        # "font-stack--monospace": "Anonymous Pro, monospace",
        # "font-stack": "Karla, sans-serif",
        "color-code-background": "#f5f5f5",
        "color-highlight-on-target": "unset",
        "color-sidebar-item-background--hover": "#c0d8cf",
    },
    "dark_css_variables": {
        "color-brand-primary": "#33916f",
        "color-brand-content": "#33916f",
        "color-background-primary": "#161713",
        "color-background-secondary": "#272822",
    },
}
pygments_style = "trac"
pygments_dark_style = "monokai"

# html_theme_options = {
# 	'stickysidebar': 'true',
# 	'footerbgcolor': '#ddd', # Background color for the footer line.
# 	'footertextcolor': '#333', # Text color for the footer line.
# 	'sidebarbgcolor': '#ddd', # Background color for the sidebar.
# 	#'sidebarbtncolor': '#0f0', # Background color for the sidebar collapse button (used when collapsiblesidebar is true).
# 	'sidebartextcolor': '#333', # Text color for the sidebar.
# 	'sidebarlinkcolor': '#33d', # Link color for the sidebar.
# 	'relbarbgcolor': '#666', # Background color for the relation bar.
# 	#'relbartextcolor': '#f00', # Text color for the relation bar.
# 	#'relbarlinkcolor': '#00f', # Link color for the relation bar.
# 	'bgcolor': '#fff', # Body background color.
# 	'textcolor': '#000', # Body text color.
# #	linkcolor (CSS color): Body link color.
# #	visitedlinkcolor (CSS color): Body color for visited links.
# #	headbgcolor (CSS color): Background color for headings.
# #	headtextcolor (CSS color): Text color for headings.
# #	headlinkcolor (CSS color): Link color for headings.
# #	codebgcolor (CSS color): Background color for code blocks.
# #	codetextcolor (CSS color): Default text color for code blocks, if not set differently by the highlighting style.
# }

# Add any paths that contain custom themes here, relative to this directory.
# html_theme_path = []

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
# html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
html_short_title = "pys4"

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
# html_logo = 's4.png'


# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
html_favicon = "_static/favicon.ico"


# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]


def env_get_outdated(app, env, added, changed, removed):
    return ["index"]


def setup(app):
    app.connect("env-get-outdated", env_get_outdated)
    app.add_css_file("custom.css")
    app.add_css_file("custom_gallery.css")


# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
# html_extra_path = []

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
# html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
# html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
# html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
# html_additional_pages = {}

# If false, no module index is generated.
# html_domain_indices = True

# If false, no index is generated.
# html_use_index = True

# If true, the index is split into individual pages for each letter.
# html_split_index = False

# If true, links to the reST sources are added to the pages.
# html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
# html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
# html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
# html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
# html_file_suffix = None

# Output file base name for HTML help builder.
htmlhelp_basename = "S4doc"


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #'preamble': '',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    ("index", "S4.tex", "S4 Documentation", "Victor Liu", "manual"),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
# latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
# latex_use_parts = False

# If true, show page references after internal links.
# latex_show_pagerefs = False

# If true, show URL addresses after external links.
# latex_show_urls = False

# Documents to append as an appendix to all manuals.
# latex_appendices = []

# If false, no module index is generated.
# latex_domain_indices = True


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [("index", "s4", "S4 Documentation", ["Victor Liu"], 1)]

# If true, show URL addresses after external links.
# man_show_urls = False


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        "index",
        "S4",
        "S4 Documentation",
        "Victor Liu",
        "S4",
        pys4.__description__,
        "Miscellaneous",
    ),
]

# Documents to append as an appendix to all manuals.
# texinfo_appendices = []

# If false, no module index is generated.
# texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
# texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
# texinfo_no_detailmenu = False

# Example configuration for intersphinx: refer to the Python standard library.

# intersphinx_mapping = {
#     "python": ("https://docs.python.org/{.major}".format(sys.version_info), None),
#     "numpy": ("https://numpy.org/devdocs/", None),
#     "matplotlib": ("https://matplotlib.org/stable/", None),
#     "scipy": ("https://numpy.org/devdocs/", None),
#     # "S4": ("https://S4.gitlab.io/", None),
# }


sphinx_gallery_conf = {
    # path to your examples scripts
    "examples_dirs": ["../examples"],
    # path where to save gallery generated examples
    "gallery_dirs": ["examples"],
    # directory where function granular galleries are stored
    "backreferences_dir": "generated/backreferences",
    "remove_config_comments": True,
    "filename_pattern": "/plot_",
    # "ignore_pattern": r"^((?!/plot_).)*$",  # ignore files that do not start with plot_
    # "ignore_pattern": r"__init__\.py",
    "reference_url": {
        "sphinx_gallery": None,
    },
    "reset_modules": (),
    # "first_notebook_cell": (
    #     "import matplotlib\n" "mpl.style.use('S4')\n" "%matplotlib inline"
    # ),
    # "image_scrapers": ("matplotlib", PNGScraper()),
    # "image_scrapers": ("pyvista", "matplotlib"),
    # Modules for which function level galleries are created.
    "doc_module": "pys4",
    "thumbnail_size": (800, 800),
    "default_thumb_file": "_static/pys4.svg",
    "show_memory": True,
    "show_signature": False,
    "first_notebook_cell": (
        "# This file is part of pys4\n" "# License: GPLv3\n" "%matplotlib notebook"
    ),
    # "binder": {
    #     "org": "S4",
    #     "repo": "S4.gitlab.io",
    #     "branch": "doc",
    #     "binderhub_url": "https://mybinder.org",
    #     "dependencies": "../environment.yml",
    #     "notebooks_dir": "notebooks",
    #     "use_jupyter_lab": False,
    # },
}
